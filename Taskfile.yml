version: '3'

tasks:
  default:
    desc: Run the test suite
    cmds:
      - task: test

  up:
    desc: Start the application and Jaeger
    cmds:
      - docker compose up -d --build --wait

  down:
    desc: Stop and remove containers
    cmds:
      - docker compose down

  logs:
    desc: View logs from all services
    cmds:
      - docker compose logs -f

  test:
    desc: Run the complete test suite
    cmds:
      - docker compose down
      - task: up
      - task: send-spans
      - task: verify-spans
    vars:
      CONTINUE_ON_ERROR: true

  send-spans:
    desc: Send test spans to the application
    cmds:
      - |
        echo "Sending test spans..."
        
        # Send debug level span
        curl -s "http://localhost:3000/debug?body=Debug%20message%20for%20testing" || true
        sleep 1
        
        # Send info level span
        curl -s "http://localhost:3000/info?body=Information%20about%20the%20system" || true
        sleep 1
        
        # Send warn level span with nested spans
        curl -s "http://localhost:3000/warn?body=Warning%20detected%20in%20system" || true
        sleep 1
        
        # Send error level span with exception
        curl -s "http://localhost:3000/error?body=Critical%20error%20occurred" || true
        sleep 2
        
        echo "Test spans sent!"

  verify-spans:
    desc: Verify spans were received by Jaeger
    cmds:
      - |
        echo "Waiting for spans to be processed..."
        sleep 5
        
        echo "Querying Jaeger for traces..."
        
        # Query Jaeger API for traces
        TRACES_JSON=$(curl -s "http://localhost:16686/api/traces?service=span-tester&limit=20")
        TRACES=$(echo "$TRACES_JSON" | grep -o '"traceID"' | wc -l)
        
        if [ "$TRACES" -gt 0 ]; then
          echo "✅ Success! Found $TRACES traces in Jaeger"
          
          # Get service operations
          echo ""
          echo "Service operations found:"
          curl -s "http://localhost:16686/api/services/span-tester/operations" | grep -o '"name":"[^"]*"' | cut -d'"' -f4 | head -10
          
          # Get unique trace IDs
          echo ""
          echo "Getting trace details and verifying SpanEvents..."
          TRACE_IDS=$(echo "$TRACES_JSON" | grep -o '"traceID":"[^"]*"' | cut -d'"' -f4 | sort -u | head -10)
          
          # Track which messages we've found
          FOUND_DEBUG=0
          FOUND_INFO=0
          FOUND_WARN=0
          FOUND_ERROR=0
          
          # Collect all trace details first
          ALL_TRACES=""
          for TRACE_ID in $TRACE_IDS; do
            echo "Checking trace: $TRACE_ID"
            TRACE_DETAIL=$(curl -s "http://localhost:16686/api/traces/$TRACE_ID")
            ALL_TRACES="$ALL_TRACES$TRACE_DETAIL"
          done
          
          echo ""
          echo "Verifying SpanEvents..."
          
          # Check for each message type
          if echo "$ALL_TRACES" | grep -q "Debug message for testing"; then
            echo "  ✅ Found DEBUG level SpanEvent: 'Debug message for testing'"
            FOUND_DEBUG=1
            
            # Verify attributes
            if echo "$ALL_TRACES" | grep -B5 -A5 "Debug message for testing" | grep -q '"level":"debug"'; then
              echo "     - Level attribute confirmed: debug"
            fi
          fi
          
          if echo "$ALL_TRACES" | grep -q "Information about the system"; then
            echo "  ✅ Found INFO level SpanEvent: 'Information about the system'"
            FOUND_INFO=1
            
            # Verify attributes
            if echo "$ALL_TRACES" | grep -B5 -A5 "Information about the system" | grep -q '"level":"info"'; then
              echo "     - Level attribute confirmed: info"
            fi
          fi
          
          if echo "$ALL_TRACES" | grep -q "Warning detected in system"; then
            echo "  ✅ Found WARN level SpanEvent: 'Warning detected in system'"
            FOUND_WARN=1
            
            # Verify attributes
            if echo "$ALL_TRACES" | grep -B5 -A5 "Warning detected in system" | grep -q '"level":"warn"'; then
              echo "     - Level attribute confirmed: warn"
            fi
          fi
          
          if echo "$ALL_TRACES" | grep -q "Critical error occurred"; then
            echo "  ✅ Found ERROR level SpanEvent: 'Critical error occurred'"
            FOUND_ERROR=1
            
            # Verify attributes
            if echo "$ALL_TRACES" | grep -B5 -A5 "Critical error occurred" | grep -q '"level":"error"'; then
              echo "     - Level attribute confirmed: error"
            fi
            
            # Check for exception
            if echo "$ALL_TRACES" | grep -q '"exception.message":"Critical error occurred"'; then
              echo "     - Exception recorded with message"
            fi
            
            # Check for error flag
            if echo "$ALL_TRACES" | grep -q '"error":true'; then
              echo "     - Error flag set to true"
            fi
          fi
          
          TOTAL_FOUND=$((FOUND_DEBUG + FOUND_INFO + FOUND_WARN + FOUND_ERROR))
          
          echo ""
          echo "================================"
          echo "Test Results Summary:"
          echo "  - Total traces analyzed: $TRACES"
          echo "  - DEBUG message found: $([ $FOUND_DEBUG -eq 1 ] && echo '✅' || echo '❌')"
          echo "  - INFO message found:  $([ $FOUND_INFO -eq 1 ] && echo '✅' || echo '❌')"
          echo "  - WARN message found:  $([ $FOUND_WARN -eq 1 ] && echo '✅' || echo '❌')"
          echo "  - ERROR message found: $([ $FOUND_ERROR -eq 1 ] && echo '✅' || echo '❌')"
          echo ""
          
          if [ "$TOTAL_FOUND" -eq 4 ]; then
            echo "✅ SUCCESS! All 4 SpanEvent message types verified!"
            echo ""
            echo "All SpanEvents with their messages have been confirmed in Jaeger."
            echo "Visit http://localhost:16686 to view the traces in Jaeger UI."
          else
            echo "⚠️ FAILED: Only $TOTAL_FOUND out of 4 message types were found."
            echo ""
            [ $FOUND_DEBUG -eq 0 ] && echo "Missing: DEBUG message"
            [ $FOUND_INFO -eq 0 ] && echo "Missing: INFO message"
            [ $FOUND_WARN -eq 0 ] && echo "Missing: WARN message"
            [ $FOUND_ERROR -eq 0 ] && echo "Missing: ERROR message"
            echo ""
            echo "This might be a timing issue. Try running 'task send-spans' again."
            exit 1
          fi
        else
          echo "⚠️ No traces found in Jaeger. This might be a timing issue."
          echo "Try running 'task send-spans' again or check logs with 'task logs'"
          exit 1
        fi
